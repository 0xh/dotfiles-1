#!/usr/bin/env zsh
#=============================================================================
#       Author: Wenxuan Zhang
#        Email: wenxuangm@gmail.com
#     HomePage: wenxuan.info
#=============================================================================

# Plugin manager
export ZPLUG_BIN=~/bin
export ZPLUG_THREADS=32
# If zplug doesn't exist, install it
ZPLUG_INIT=~/.zplug/init.zsh
[[ -f "$ZPLUG_INIT" ]] || curl -sL https://raw.githubusercontent.com/zplug/installer/master/installer.zsh |zsh
source "$ZPLUG_INIT"

zplug 'zplug/zplug', hook-build:'zplug --self-manage'
# No need to load it when in ssh session
# [ "$SSH_CLIENT" ] || zplug "plugins/web-search",    from:oh-my-zsh, hook-load:"unalias map &>/dev/null"
[ "$SSH_CLIENT" ] || zplug 'wfxr/fzf-chrome-marks', as:command, use:'b'

# Git alias. See: https://github.com/robbyrussell/oh-my-zsh/wiki/Plugin:git
zplug "plugins/git", from:oh-my-zsh
# Git completions. On OS X with Homebrew, you need to install git with brew install git --without-completions. Otherwise, git's _git will take precedence, and you won't see the completions for git-extras commands.
zplug "plugins/git-extras", from:oh-my-zsh
zplug 'plugins/git-flow-avh', from:oh-my-zsh
#zplug "plugins/cp", from:oh-my-zsh
(( $+commands[mvn]        )) && zplug "plugins/mvn",        from:oh-my-zsh, lazy:yes
(( $+commands[docker]     )) && zplug "plugins/docker",     from:oh-my-zsh, lazy:yes
(( $+commands[tmuxinator] )) && zplug "plugins/tmuxinator", from:oh-my-zsh, lazy:yes
(( $+commands[gem]        )) && zplug "plugins/gem",        from:oh-my-zsh, lazy:yes
(( $+commands[lein]       )) && zplug 'plugins/lein',       from:oh-my-zsh, lazy:yes
# (( $+commands[odpscmd]    )) && zplug 'wfxr/odps-fzf'
zplug "plugins/colored-man-pages", from:oh-my-zsh
zplug "changyuheng/fz", defer:1
zplug "rupa/z", use:"z.sh"

zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-autosuggestions"
ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS=(forward-word forward-char)
ZSH_AUTOSUGGEST_ACCEPT_WIDGETS=(end-of-line)

# zplug "morhetz/gruvbox", use:"gruvbox_256palette.sh" # No necessory for neovim & vim 8+
zplug "felixonmars/ydcv", as:command, use:"src/ydcv.py", rename-to:"ydcv"
zplug 'soimort/translate-shell', at:'develop'
#zplug 'ytet5uy4/fzf-widgets'

################################################################################
# Themes
################################################################################
# zplug "wfxr/spaceship-zsh-theme", use:spaceship.zsh, as:theme
zplug "denysdovhan/spaceship-prompt", as:theme
#zplug "bhilburn/powerlevel9k", use:powerlevel9k.zsh-theme, as:theme
#zplug "subnixr/minimal", as:theme, use:"minimal.zsh"
# zplug "mafredri/zsh-async"
# zplug "sindresorhus/pure", use:pure.zsh, as:theme

zplug 'so-fancy/diff-so-fancy', \
    as:command, use:diff-so-fancy, \
    hook-build:'git config --global core.pager "diff-so-fancy | less --tabs=4 -RFX"'

zplug 'b4b4r07/zplug-doctor', lazy:yes

zplug 'wfxr/zplug-rm', lazy:yes
zplug 'wfxr/iconful', as:command, use:'(iconful).sh', rename-to:'$1'
zplug 'wfxr/forepos'
zplug 'wfxr/epoch-cli'
zplug "wfxr/formarks"
zplug 'wfxr/forgit', defer:1
FORGIT_FZF_DEFAULT_OPTS="
--height '80%'
"
# zplug 'wfxr/epoch-cli'
zplug "wfxr/emoji-cli", as:command, use:'emojify|fuzzy-emoji'
# zplug "wfxr/emoji-cli", as:plugin
# EMOJI_CLI_KEYBIND='^[m'

(( $+commands[jq] )) || zplug "stedolan/jq", as:command, from:gh-r, rename-to:jq

# Short, simple, direct scripts for creating ASCII graphical histograms in the terminal.
#zplug "philovivero/distribution", \
    #as:command, \
    #use:distribution

#zplug "holman/spark", \
    #as:command, \
    #use:spark

# httpstat visualizes curl(1) statistics in a way of beauty and clarity.
zplug "reorx/httpstat", \
    as:command, \
    use:'(httpstat).py', \
    rename-to:'$1'

# An interactive way to peruse your git history from the terminal
#zplug 'Fakerr/git-recall', \
    #as:command, \
    #use:'git-recall'

# Remote repository management made easy
# zplug "motemen/ghq", \
    # as:command, \
    # from:gh-r, \
    # rename-to:ghq

# sparklines
# usage: sparklines -n 3 null 3 7 4 2 5 6 | lolcat
#zplug "deeplook/sparklines", hook-build:"sudo pip install -e ."

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    read -q && echo && zplug install
fi

zplug load
