snippet try "try...catch block" b
try {
	${VISUAL}$0
} catch(${1:std::exception& e}) {
	${2:std::cerr << e.what() << std::endl;}
}
endsnippet

snippet cls "class..." b
class ${1:ClassName} {
public:
private:
};
endsnippet

# 生成和file同名的类
snippet class "An entire .h generator" b
#pragma once

class ${1:`!v substitute(substitute(vim_snippets#Filename('$1','ClassName'),'^.','\u&',''), '_\(\w\)', '\u\1', 'g')`} {
public:

private:
	${3}
};
endsnippet

snippet vm "main()..." b
int main() {
	$0
}
endsnippet

snippet debug "insert debug statement" b
std::cout << "[debug] ${0}" << std::endl;
endsnippet
